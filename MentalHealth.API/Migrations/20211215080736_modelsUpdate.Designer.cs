// <auto-generated />
using System;
using MentalHealth.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MentalHealth.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211215080736_modelsUpdate")]
    partial class modelsUpdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MentalHealth.DAL.Entities.ExperienceWords", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<Guid>("TestResultId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("UsedPercentage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TestResultId");

                    b.ToTable("ExperienceWords");
                });

            modelBuilder.Entity("MentalHealth.DAL.Entities.Feeling", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("FeelPoint")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("Feelings");
                });

            modelBuilder.Entity("MentalHealth.DAL.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("MentalHealth.DAL.Entities.TestResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FeelingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("PassedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Story")
                        .IsRequired()
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FeelingId");

                    b.HasIndex("UserId");

                    b.ToTable("TestResults");
                });

            modelBuilder.Entity("MentalHealth.DAL.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MentalHealth.DAL.Entities.ExperienceWords", b =>
                {
                    b.HasOne("MentalHealth.DAL.Entities.TestResult", "TestResult")
                        .WithMany("ExperienceWords")
                        .HasForeignKey("TestResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TestResult");
                });

            modelBuilder.Entity("MentalHealth.DAL.Entities.TestResult", b =>
                {
                    b.HasOne("MentalHealth.DAL.Entities.Feeling", "Feeling")
                        .WithMany("TestResults")
                        .HasForeignKey("FeelingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MentalHealth.DAL.Entities.User", "User")
                        .WithMany("TestResults")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feeling");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MentalHealth.DAL.Entities.User", b =>
                {
                    b.HasOne("MentalHealth.DAL.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("MentalHealth.DAL.Entities.Feeling", b =>
                {
                    b.Navigation("TestResults");
                });

            modelBuilder.Entity("MentalHealth.DAL.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("MentalHealth.DAL.Entities.TestResult", b =>
                {
                    b.Navigation("ExperienceWords");
                });

            modelBuilder.Entity("MentalHealth.DAL.Entities.User", b =>
                {
                    b.Navigation("TestResults");
                });
#pragma warning restore 612, 618
        }
    }
}
